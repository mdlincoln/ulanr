% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ulanr.R
\name{ulan_match}
\alias{ulan_data}
\alias{ulan_id}
\alias{ulan_match}
\title{Match names to the Getty ULAN}
\usage{
ulan_match(names, early_year = -9999, late_year = 2090, inclusive = TRUE,
  method = c("sparql", "local"), max_results = 5)

ulan_id(names, early_year = -9999, late_year = 2090, inclusive = TRUE,
  method = c("sparql", "local"), max_results = 1)

ulan_data(names, early_year = -9999, late_year = 2090, inclusive = TRUE,
  method = c("sparql", "local"), max_results = 1)
}
\arguments{
\item{names}{A character vector of names to match to a canonical ULAN id.}

\item{early_year}{Match only artists who died after this year. Like
\code{late_year}, this argument should be a numeric vector of length 1, or
of the same length as \code{names}. If length 1, the same date restrictions
will be used to match every value of \code{names}. Otherwise, each name
match can be restricted to its own pair of early_year and late_year. If no
\code{early_year} or \code{late_year} are specified, then artists from all
time periods will be eligible for matching. Any NA values in
\code{early_year} or \code{late_year} will be coerced to default maxima and
minima.}

\item{late_year}{Match only artists who were born before this year.}

\item{inclusive}{Method for filtering search results using the
early_year/late_year parameters. TRUE (the default) will only include
artists whose life dates fall within the range [late_year, early_year].
FALSE will include artists whose life dates intersect with [early_year,
late_year]}

\item{method}{This value determines which method will be used to match the
name to a canonical ULAN id. \code{sparql} will query the Getty's live
endpoint, relying on its Lucene index for finding close matches, while
\code{local} instead uses string distance measures based on a local table
of ULAN entries.}

\item{max_results}{The maximum number of results to return. Defaults to 5.
Depending on the query, the actual number of results returned may be lower.
When \code{method = "sparql"} is used, values over 50 will be ignored.}
}
\value{
A named list of data.frames, one per submitted name, with 7 columns
  and no more than \code{max_results} rows:
\describe{
\item{\code{id}}{integer. ULAN id}
\item{\code{pref_name}}{character. ULAN preferred name}
\item{\code{birth_year}}{integer. Artist birth year, if assigned.}
\item{\code{death_year}}{integer. Artist death year, if assigned}
\item{\code{gender}}{character. Artist gender, if assigned.}
\item{\code{nationality}}{character. Artist nationality, if assigned.}
\item{\code{score}}{numeric. The score of the result. When \code{method =
"sparql"}, this is the Lucene index score (a higher score for a closer
match). When \code{method = "local"}, it will instead be a scaled string
distance score.}
}

Unmatched names will return a data.frame with NAs for all values save
\code{name}.
}
\description{
Queries the Getty ULAN to find matching entries for a given string. You
may filter the results by specifying an early or late date.
}
\section{Functions}{
\itemize{
\item \code{ulan_id}: Return a vector of matching ULAN IDs. This function is a wrapper around \link{ulan_match} that simply returns a
vector of the top match ID for each name given (as if \code{max_results} were
1). \code{max_results} will be ignored.

\item \code{ulan_data}: Return a dataframe of matching ULAN IDs with attributes, with an additional column \code{names} containing the original input vector. This function is a wrapper around \link{ulan_match}.
}}
\note{
\code{method = "sparql"} requires an internet connection.
}
\examples{
\dontrun{ulan_id("Rembrandt", early_year = 1600,
                 late_year = 1700, method = "sparql")}
\dontrun{ulan_id(c("Rembrandt", "Rothko"), early_year = c(1600, 1900),
                 late_year = c(1700, 2000), method = "sparql")}
}

